"use client";
import { useEffect, useState, useRef } from "react";
import { motion, AnimatePresence } from "framer-motion";
import Image from "next/image";
import { Icon } from "@iconify/react";

const slides = [
  {
    image: "/1.png",
    caption:
      "‡∏£‡∏π‡∏õ‡∏Ñ‡∏π‡πà‡πÄ‡∏£‡∏≤‡∏°‡∏µ‡πÑ‡∏°‡πà‡∏Ñ‡πà‡∏≠‡∏¢‡πÄ‡∏¢‡∏≠‡∏∞ üì∏ ‡∏™‡πà‡∏ß‡∏ô‡∏°‡∏≤‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏±‡∏ô‡πÄ‡∏Ñ‡πâ‡∏≤‡πÅ‡∏ó‡∏ö‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏≤‡∏Å‡∏à‡∏∞‡πÄ‡∏≠‡∏≤‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå‡∏°‡∏≤‡∏ñ‡πà‡∏≤‡∏¢ üòù",
  },
  {
    image: "/2.png",
    caption:
      "‡∏£‡∏π‡∏õ‡∏Ñ‡∏π‡πà‡∏Æ‡∏á‡πÅ‡∏î üèôÔ∏è ‡∏Å‡πà‡∏≠‡∏ô‡∏ö‡∏ß‡∏ä üôè ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏à‡πâ‡∏≤‡∏°‡∏∑‡∏≠‡∏ô‡πâ‡∏≤‡∏≤ üí∏ ‡∏ï‡∏≠‡∏ô‡∏ô‡∏±‡πâ‡∏ô‡πÄ‡∏Ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô ‡∏•‡∏≥‡∏ö‡∏≤‡∏Å‡πÄ‡∏ó‡∏≠‡∏≠‡∏µ‡∏Å 55555 üòÇ",
  },
  { image: "/3.jpg", caption: "‡πÑ‡∏õ‡∏≠‡∏µ‡∏™‡∏™‡∏•‡∏±‡∏Ñ‡∏Å‡∏µ‡πâ‡∏ö‡∏≤‡∏£‡πå‡∏ö‡∏µ‡∏Ñ‡∏¥‡∏ß‡∏Å‡∏±‡∏ô‡∏ô üçñüî•" },
  {
    image: "/4.jpg",
    caption:
      "‡πÄ‡∏ù‡πâ‡∏≤‡πÑ‡∏≠‡πâ‡πÄ‡∏î‡πá‡∏Å üê∂ ‡∏ß‡∏±‡∏ô‡∏ô‡∏±‡πâ‡∏ô‡πÄ‡∏£‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏Å‡∏±‡∏ô üòî ‡πÄ‡∏Ñ‡πâ‡∏≤‡∏Å‡πá‡∏¢‡∏±‡∏á‡∏ó‡∏≥‡πÑ‡∏î‡πâ‡πÅ‡∏Ñ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏Ç‡πâ‡∏≤‡∏á‡πÜ‡πÅ‡∏ö‡∏ö‡πÄ‡∏á‡∏µ‡∏¢‡∏ö‡πÜ ü§ç",
  },
  {
    image: "/5.png",
    caption: "‡πÑ‡∏õ‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏≠‡∏Ñ‡∏ß‡∏≤‡πÄ‡∏£‡∏µ‡πà‡∏¢‡∏° üê† ‡∏Å‡∏¥‡∏ô‡πÄ‡∏Ñ‡πä‡∏Å‡∏Å‡∏±‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏ä‡∏¥‡πâ‡∏ô‡∏ô‡∏∂‡∏á üç∞ ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏û‡∏±‡∏Å üè†",
  },
  {
    image: "/6.png",
    caption: "‡∏ä‡∏≤‡∏ö‡∏π‡∏≠‡∏µ‡∏Å‡πÅ‡∏•‡πâ‡∏ß‡∏ß üç≤ ‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏ó‡∏µ‡πÑ‡∏£‡∏Å‡πá‡∏°‡∏µ‡πÅ‡∏ï‡πà‡∏ä‡∏≤‡∏ö‡∏π 55555 ü§≠",
  },
  {
    image: "/7.png",
    caption: "‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß‡∏ô‡∏∞ ü§î ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ‡πÄ‡∏£‡∏≤‡∏•‡∏á‡∏°‡∏≤‡∏ó‡∏≥‡πÑ‡∏° 55555555 üòÇ",
  },
  { image: "/8.png", caption: "‡πÉ‡∏´‡πâ‡πÉ‡∏™‡πà‡∏ö‡πà‡∏≠‡∏¢‡∏°‡∏ß‡πä‡∏≤‡∏≤‡∏Å üß• ‡∏Å‡∏•‡∏±‡∏ß‡πÄ‡∏ó‡∏≠‡∏£‡πâ‡∏≠‡∏ô‡∏ô‡∏µ‡πà‡∏ô‡∏≤ ‚òÄÔ∏è" },
  {
    image: "/9.png",
    caption: "‡∏õ‡∏¥‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏î‡πâ‡∏ß‡∏¢‡∏ä‡∏≤‡∏ö‡∏π‡∏≠‡∏µ‡∏Å‡πÅ‡∏¢‡πâ‡∏ß‡∏ß‡∏ß‡∏ß‡∏ß üç≤üíû",
  },
];

function diffYMD(start: Date, end: Date) {
  let years = end.getFullYear() - start.getFullYear();
  let months = end.getMonth() - start.getMonth();
  let days = end.getDate() - start.getDate();

  if (days < 0) {
    months--;
    days += new Date(end.getFullYear(), end.getMonth(), 0).getDate();
  }
  if (months < 0) {
    years--;
    months += 12;
  }

  return { years, months, days };
}

export default function Home() {
  const audioRef = useRef<HTMLAudioElement>(null);
  const [isPlaying, setIsPlaying] = useState(false);
  const [scene, setScene] = useState<
    | "intro"
    | "showAnniversary"
    | "askDate"
    | "tellSorry"
    | "tellJoke"
    | "reviewJourney"
    | "slideshow"
    | "showDuration"
    | "showThanks"
    | "devMessage"
    | "lastThanks"
    | "gotCooked"
  >("intro");

  const [currentSlide, setCurrentSlide] = useState(0);
  const [slideRounds, setSlideRounds] = useState(0);
  function fadeIn(audio: HTMLAudioElement, duration = 2000) {
    audio.volume = 0;
    audio.play();
    const step = 0.05;
    const intervalTime = (duration * step) / 1;
    let volume = 0;

    const fadeInterval = setInterval(() => {
      volume += step;
      if (volume >= 1) {
        audio.volume = 1;
        clearInterval(fadeInterval);
      } else {
        audio.volume = volume;
      }
    }, intervalTime);
  }
  function fadeOut(audio: HTMLAudioElement, duration = 2000) {
    const step = 0.05;
    const intervalTime = (duration * step) / 1;
    let volume = audio.volume;

    const fadeInterval = setInterval(() => {
      volume -= step;
      if (volume <= 0) {
        audio.volume = 0;
        audio.pause();
        audio.currentTime = 0;
        clearInterval(fadeInterval);
      } else {
        audio.volume = volume;
      }
    }, intervalTime);
  }
  useEffect(() => {
    const audio = audioRef.current;
    if (!audio) return;

    if (scene === "showAnniversary") {
      if (audio.paused) {
        fadeIn(audio, 3000);
      }
      setIsPlaying(true);
    }

    if (scene === "lastThanks") {
      fadeOut(audio, 3000);
    }
  }, [scene]);
  useEffect(() => {
    if (scene !== "slideshow") return;

    const interval = setInterval(() => {
      setCurrentSlide((prev) => {
        if (prev === slides.length - 1) {
          setSlideRounds((r) => r + 1);
        }
        return (prev + 1) % slides.length;
      });
    }, 6000);

    return () => clearInterval(interval);
  }, [scene]);

  useEffect(() => {
    if (slideRounds >= 1) {
      setScene("showDuration");
    }
  }, [slideRounds]);

  useEffect(() => {
    let timeout: NodeJS.Timeout;

    switch (scene) {
      case "gotCooked":
        timeout = setTimeout(() => setScene("askDate"), 3000);
        break;

      case "askDate":
        timeout = setTimeout(() => setScene("tellSorry"), 3000);
        break;

      case "tellSorry":
        timeout = setTimeout(() => setScene("tellJoke"), 7000);
        break;

      case "tellJoke":
        timeout = setTimeout(() => setScene("showAnniversary"), 4000);
        break;

      case "showAnniversary":
        timeout = setTimeout(() => setScene("reviewJourney"), 3000);
        break;

      // ... (rest ‡∏ï‡∏≤‡∏°‡πÄ‡∏î‡∏¥‡∏°)
      case "reviewJourney":
        timeout = setTimeout(() => setScene("slideshow"), 10000);
        break;
      case "showDuration":
        timeout = setTimeout(() => setScene("showThanks"), 10000);
        break;
      case "showThanks":
        timeout = setTimeout(() => setScene("devMessage"), 15000);
        break;
      case "devMessage":
        timeout = setTimeout(() => setScene("lastThanks"), 10000);
        break;

      default:
        break;
    }

    return () => clearTimeout(timeout);
  }, [scene]);

  function handleStart() {
    setScene("gotCooked");
  }

  const startDate = new Date(2022, 5, 6);
  const now = new Date();
  const diff = diffYMD(startDate, now);
  function handleBack() {
    const order = [
      "intro",
      "gotCooked",
      "showAnniversary",
      "askDate",
      "tellSorry",
      "tellJoke",
      "reviewJourney",
      "slideshow",
      "showDuration",
      "showThanks",
      "devMessage",
      "lastThanks",
    ];
    const idx = order.indexOf(scene);
    if (idx > 0) {
      setScene(order[idx - 1] as typeof scene);
    }
  }
  function handlePrevSlide() {
    setCurrentSlide((prev) => (prev === 0 ? slides.length - 1 : prev - 1));
  }
  function handleNextSlide() {
    setCurrentSlide((prev) => (prev + 1) % slides.length);
  }
  useEffect(() => {
    const audio = audioRef.current;
    if (!audio) return;

    const handlePlay = () => setIsPlaying(true);
    const handlePause = () => setIsPlaying(false);

    audio.addEventListener("play", handlePlay);
    audio.addEventListener("pause", handlePause);

    return () => {
      audio.removeEventListener("play", handlePlay);
      audio.removeEventListener("pause", handlePause);
    };
  }, []);
  return (
    <motion.div
      className="font-sans flex flex-col items-center justify-center min-h-screen pb-20 sm:p-20 w-full"
      initial={false}
      animate={{
        background:
          scene === "intro"
            ? "#26A4FF"
            : `url('/background.jpg') no-repeat center center / auto`,
        color: scene === "intro" ? "#ffffff" : "#000000",
      }}
      transition={{ duration: 1 }}
    >
      <audio ref={audioRef} src="/LoveStory.mp3" preload="auto" />
      <AnimatePresence mode="wait">
        {scene === "intro" && (
          <motion.div
            key="intro"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            className="flex flex-col gap-4 items-center min-h-screen justify-center px-8"
          >
            <p className="text-3xl text-center w-50">
              ‡πÅ‡∏ö‡∏ö‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Å‡∏≤‡∏£ Training ‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô
            </p>
            <button
              onClick={handleStart}
              className="bg-blue-800 text-white px-4 py-2 mt-4 rounded"
            >
              ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö
            </button>
          </motion.div>
        )}
        {scene === "gotCooked" && (
          <motion.div
            key="gotCooked"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            className="flex items-center justify-center min-h-screen"
          >
            <p
              className="text-5xl font-bold text-pink-800"
              style={{ fontFamily: "Font_th" }}
            >
              ‡∏ß‡πâ‡∏≤‡∏¢‡∏¢ ‡πÇ‡∏î‡∏ô‡∏´‡∏•‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß !
            </p>
          </motion.div>
        )}
        {scene === "showAnniversary" && (
          <motion.div
            key="showAnniversary"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            className="flex items-center justify-center min-h-screen"
          >
            <div className="flex flex-col gap-10 items-center justify-center">
              <p
                className="text-3xl font-bold text-pink-800"
                style={{ fontFamily: "MyFont" }}
              >
                Happy Anniversary Nakub My Lover
              </p>
              <Image
                className="rounded-full"
                src={"/June.jpg"}
                width={150}
                height={150}
                alt={""}
              />
              <p className="text-4xl" style={{ fontFamily: "Font_th" }}>
                ‡πÑ‡∏≠‡πâ‡πÄ‡∏î‡πá‡∏Å‡∏à‡∏π‡∏ô
              </p>{" "}
              <button
                onClick={handleBack}
                className="flex items-center gap-5 mt-6 px-4 py-2  rounded-lg border-2 border-pink-400 shadow-[2px_2px_0px_#000] hover:shadow-[4px_4px_0px_#000] transition-all duration-200 font-bold"
                style={{
                  backgroundColor: "#FFCAC9",
                  color: "#9F5857",
                  borderWidth: "2px",
                  borderStyle: "solid",
                  borderColor: "#9F5857",
                }}
              >
                <Icon icon="mdi:arrow-left" width="20" />
                <span>‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö</span>
              </button>
            </div>
          </motion.div>
        )}

        {scene === "askDate" && (
          <motion.div
            key="askDate"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            className="flex flex-col items-center justify-center min-h-screen px-8 text-center"
          >
            <p className="text-3xl text-pink-700 font-semibold">
              ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏ß‡∏±‡∏ô‡∏≠‡∏∞‡πÑ‡∏£...‡∏à‡∏≥‡πÑ‡∏î‡πâ‡∏°‡∏±‡πâ‡∏¢? ü©∑
            </p>
            <button
              onClick={handleBack}
              className="flex items-center gap-5 mt-6 px-4 py-2 rounded-lg border-2 border-pink-400 shadow-[2px_2px_0px_#000] hover:shadow-[4px_4px_0px_#000] transition-all duration-200 font-bold"
              style={{
                backgroundColor: "#FFCAC9",
                color: "#9F5857",
                borderWidth: "2px",
                borderStyle: "solid",
                borderColor: "#9F5857",
              }}
            >
              <Icon icon="mdi:arrow-left" width="20" />
              <span>‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö</span>
            </button>
          </motion.div>
        )}

        {scene === "tellSorry" && (
          <motion.div
            key="tellSorry"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            className="flex flex-col items-center justify-center min-h-screen px-8 text-center"
          >
            <p className="text-2xl text-gray-800 text-center">
              ‡πÄ‡∏ó‡∏≠‡∏à‡∏≥‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‡∏à‡∏≥‡πÑ‡∏î‡πâ‡∏°‡∏≤‡∏ï‡∏•‡∏≠‡∏î
              <br />
              ‡∏°‡∏µ‡πÅ‡∏ï‡πà‡∏ú‡∏π‡πâ‡∏ä‡∏≤‡∏¢‡∏´‡πà‡∏ß‡∏¢‡πÜ‡∏Ñ‡∏ô‡∏ô‡∏µ‡πâ‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢ ‡∏Ç‡∏≠‡πÇ‡∏ó‡∏©‡∏ô‡∏∞..
              <br />
              ‡∏Ç‡∏≠‡πÇ‡∏ó‡∏©‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÄ‡∏Ñ‡∏¢‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£‡πÄ‡∏•‡πá‡∏Å‡πÜ‡∏ô‡πâ‡∏≠‡∏¢‡πÜ‡πÉ‡∏´‡πâ‡πÄ‡∏ó‡∏≠‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ‡∏°‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏•‡∏¢
            </p>{" "}
            <button
              onClick={handleBack}
              className="flex items-center gap-5 mt-6 px-4 py-2 rounded-lg border-2 border-pink-400 shadow-[2px_2px_0px_#000] hover:shadow-[4px_4px_0px_#000] transition-all duration-200 font-bold"
              style={{
                backgroundColor: "#FFCAC9",
                color: "#9F5857",
                borderWidth: "2px",
                borderStyle: "solid",
                borderColor: "#9F5857",
              }}
            >
              <Icon icon="mdi:arrow-left" width="20" />
              <span>‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö</span>
            </button>{" "}
          </motion.div>
        )}

        {scene === "tellJoke" && (
          <motion.div
            key="tellJoke"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            className="flex flex-col items-center justify-center min-h-screen px-8 text-center"
          >
            <p className="text-2xl text-gray-800">
              ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∑‡∏≠ ‡∏ß‡∏±‡∏ô‡∏û‡∏∏‡∏ò ‡πÅ‡∏Æ‡∏£‡πà 5555555
            </p>
            <button
              onClick={handleBack}
              className="flex items-center gap-5 mt-6 px-4 py-2 rounded-lg border-2 border-pink-400 shadow-[2px_2px_0px_#000] hover:shadow-[4px_4px_0px_#000] transition-all duration-200 font-bold"
              style={{
                backgroundColor: "#FFCAC9",
                color: "#9F5857",
                borderWidth: "2px",
                borderStyle: "solid",
                borderColor: "#9F5857",
              }}
            >
              <Icon icon="mdi:arrow-left" width="20" />
              <span>‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö</span>
            </button>
          </motion.div>
        )}

        {scene === "reviewJourney" && (
          <motion.div
            key="reviewJourney"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            className="flex flex-col items-center justify-center min-h-screen px-8 text-center"
          >
            <p className="text-3xl font-bold text-pink-700 mb-4">
              ‡∏°‡∏≤‡∏î‡∏π‡∏Å‡∏±‡∏ô‡∏ß‡πà‡∏≤‡πÄ‡∏£‡∏≤‡∏ú‡πà‡∏≤‡∏ô‡∏≠‡∏∞‡πÑ‡∏£‡∏°‡∏≤‡∏ö‡πâ‡∏≤‡∏á ü•∞
            </p>
            <p className="text-xl text-gray-700 max-w-md">
              ‡∏à‡∏≤‡∏Å‡∏ß‡∏±‡∏ô‡πÅ‡∏£‡∏Å‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏¢‡∏Å‡∏±‡∏ô ‡πÑ‡∏°‡πà‡∏Ñ‡∏¥‡∏î‡πÄ‡∏•‡∏¢‡∏ß‡πà‡∏≤‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏°‡∏≤‡πÑ‡∏Å‡∏•‡∏Ç‡∏ô‡∏≤‡∏î‡∏ô‡∏µ‡πâ
              <br />
              ‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏£‡∏≤‡∏ß‡∏ó‡∏±‡πâ‡∏á‡∏î‡∏µ‡πÅ‡∏•‡∏∞‡∏£‡πâ‡∏≤‡∏¢‡∏°‡∏≤‡∏Å‡∏°‡∏≤‡∏¢ ‡πÅ‡∏ï‡πà‡∏Å‡πá‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏Å‡∏±‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ
              <br />
              ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ô‡∏∞‡∏Ñ‡∏∞ üíë
            </p>
            <button
              onClick={handleBack}
              className="flex items-center gap-5 mt-6 px-4 py-2 rounded-lg border-2 border-pink-400 shadow-[2px_2px_0px_#000] hover:shadow-[4px_4px_0px_#000] transition-all duration-200 font-bold"
              style={{
                backgroundColor: "#FFCAC9",
                color: "#9F5857",
                borderWidth: "2px",
                borderStyle: "solid",
                borderColor: "#9F5857",
              }}
            >
              <Icon icon="mdi:arrow-left" width="20" />
              <span>‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö</span>
            </button>
          </motion.div>
        )}

        {scene === "slideshow" && (
          <motion.div
            key="slideshow"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            className="flex flex-col items-center justify-center min-h-screen"
          >
            <AnimatePresence mode="wait">
              <motion.div
                key={currentSlide}
                initial={{ opacity: 0, x: 100 }}
                animate={{ opacity: 1, x: 0 }}
                exit={{ opacity: 0, x: -100 }}
                transition={{ duration: 0.5 }}
                className="flex flex-col items-center"
              >
                <div className="bg-white shadow-lg p-2 pb-6 rounded-md relative">
                  <img
                    src={slides[currentSlide].image}
                    alt={slides[currentSlide].caption}
                    className="h-70 object-cover rounded-sm"
                  />
                  <p className="absolute bottom-2 left-0 w-full text-center text-sm text-gray-700 font-semibold"></p>
                </div>
                <p className="mt-2 text-center w-45 text-gray-800 font-medium select-none">
                  {slides[currentSlide].caption}
                </p>
              </motion.div>
              <div className="flex items-center gap-5">
                {" "}
                <button
                  onClick={handlePrevSlide}
                  className="flex items-center gap-5 mt-6 px-4 py-2 rounded-lg border-2 border-pink-400 shadow-[2px_2px_0px_#000] hover:shadow-[4px_4px_0px_#000] transition-all duration-200 font-bold"
                  style={{
                    backgroundColor: "#FFCAC9",
                    color: "#9F5857",
                    borderWidth: "2px",
                    borderStyle: "solid",
                    borderColor: "#9F5857",
                  }}
                >
                  <Icon icon="mdi:arrow-left" width="20" />
                  <span>‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö</span>
                </button>{" "}
                {currentSlide < slides.length - 1 && (
                  <button
                    onClick={handleNextSlide}
                    className="flex items-center gap-5 mt-6 px-4 py-2 rounded-lg border-2 border-pink-400 shadow-[2px_2px_0px_#000] hover:shadow-[4px_4px_0px_#000] transition-all duration-200 font-bold"
                    style={{
                      backgroundColor: "#FFCAC9",
                      color: "#9F5857",
                      borderWidth: "2px",
                      borderStyle: "solid",
                      borderColor: "#9F5857",
                    }}
                  >
                    <span>‡∏ï‡πà‡∏≠‡πÑ‡∏õ</span>
                    <Icon icon="mdi:arrow-right" width="20" />
                  </button>
                )}
              </div>
            </AnimatePresence>
          </motion.div>
        )}

        {scene === "showDuration" && (
          <motion.div
            key="showDuration"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            className="flex flex-col items-center justify-center min-h-screen px-8 text-center"
          >
            <p className="text-4xl font-semibold text-pink-700">
              ‡πÄ‡∏£‡∏≤‡∏Ñ‡∏ö‡∏Å‡∏±‡∏ô‡∏°‡∏≤‡πÅ‡∏•‡πâ‡∏ß {diff.years} ‡∏õ‡∏µ {diff.months} ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô {diff.days} ‡∏ß‡∏±‡∏ô
            </p>
            <p className="mt-4 text-lg text-gray-600">06/06/2022</p>
            <button
              onClick={handleBack}
              className="flex items-center gap-5 mt-6 px-4 py-2 rounded-lg border-2 border-pink-400 shadow-[2px_2px_0px_#000] hover:shadow-[4px_4px_0px_#000] transition-all duration-200 font-bold"
              style={{
                backgroundColor: "#FFCAC9",
                color: "#9F5857",
                borderWidth: "2px",
                borderStyle: "solid",
                borderColor: "#9F5857",
              }}
            >
              <Icon icon="mdi:arrow-left" width="20" />
              <span>‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö</span>
            </button>
          </motion.div>
        )}

        {scene === "showThanks" && (
          <div className="flex flex-col justify-center items-center">
            <motion.p className="text-3xl italic text-pink-600 max-w-md leading-relaxed text-center">
              {[
                "‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏ô‡∏µ‡πâ ‡∏≠‡∏¢‡∏≤‡∏Å‡∏à‡∏∞‡∏ö‡∏≠‡∏Å‡∏ß‡πà‡∏≤ ‡πÄ‡∏Ñ‡πâ‡∏≤‡∏£‡∏±‡∏Å‡πÄ‡∏ó‡∏≠‡∏ô‡∏∞",
                "‡πÑ‡∏°‡πà‡∏Ñ‡∏¥‡∏î‡∏à‡∏∞‡∏£‡∏±‡∏Å‡πÄ‡∏ó‡∏≠‡∏ô‡πâ‡∏≠‡∏¢‡∏•‡∏á‡πÄ‡∏•‡∏¢",
                "‡πÅ‡∏°‡πâ‡∏ß‡πà‡∏≤‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏¢‡∏π‡πà‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏±‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏õ ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÄ‡∏£‡∏≤‡πÇ‡∏ï‡∏Ç‡∏∂‡πâ‡∏ô",
                "‡∏ï‡πà‡∏≤‡∏á‡∏Ñ‡∏ô‡∏ï‡πà‡∏≤‡∏á‡∏°‡∏µ‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà ‡∏°‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á",
                "‡πÄ‡∏Ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏ô‡πâ‡∏≠‡∏¢‡πÉ‡∏à‡πÄ‡∏•‡∏¢ ‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤‡∏≠‡∏µ‡∏Å ‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏ó‡∏≠‡∏°‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á",
                "‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏•‡∏á‡∏≤‡∏ô‡πÅ‡∏£‡∏Å‡πÜ‡∏ó‡∏µ‡πà‡∏Ñ‡∏¥‡∏î‡∏ß‡πà‡∏≤‡∏à‡∏≥‡∏ó‡∏≥‡πÄ‡∏•‡∏¢ ‡πÅ‡∏ï‡πà‡∏™‡∏Å‡∏¥‡∏•‡∏î‡∏±‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏∂‡∏á 555555",
                "‡πÅ‡∏Ñ‡πà‡∏≠‡∏¢‡∏≤‡∏Å‡∏ó‡∏≥‡∏™‡∏¥‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÉ‡∏´‡πâ‡πÄ‡∏ó‡∏≠ ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÄ‡∏ó‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ô‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏Ç‡∏≠‡∏á‡πÄ‡∏Ñ‡πâ‡∏≤",
                "‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ô‡∏∞‡∏Ñ‡∏∞‡∏ó‡∏µ‡πà‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï‡∏°‡∏≤‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏î‡∏µ ‡∏£‡∏±‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î ‚ù§Ô∏è",
              ].map((line, i) => (
                <motion.span
                  key={i}
                  initial={{ opacity: 0, y: 10 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ delay: i * 0.8, duration: 0.6 }}
                  className="block mb-2 text-lg"
                >
                  {line}
                </motion.span>
              ))}
            </motion.p>
            <button
              onClick={handleBack}
              className="flex items-center gap-5 mt-6 px-4 py-2 rounded-lg border-2 border-pink-400 shadow-[2px_2px_0px_#000] hover:shadow-[4px_4px_0px_#000] transition-all duration-200 font-bold mx-auto"
              style={{
                backgroundColor: "#FFCAC9",
                color: "#9F5857",
                borderWidth: "2px",
                borderStyle: "solid",
                borderColor: "#9F5857",
              }}
            >
              <Icon icon="mdi:arrow-left" width="20" />
              <span>‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö</span>
            </button>
          </div>
        )}
        {scene === "devMessage" && (
          <motion.div
            key="devMessage"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            className="flex flex-col items-center justify-center min-h-screen px-8 text-center"
          >
            {/* <motion.img
              src="/dev.png" // ‡πÉ‡∏™‡πà‡∏£‡∏π‡∏õ dev ‡∏´‡∏£‡∏∑‡∏≠‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡∏´‡∏±‡∏ß‡πÉ‡∏à‡πÑ‡∏î‡πâ
              alt="dev crying"
              className="h-40 mb-6 rounded-full shadow-lg"
              initial={{ scale: 0.8, opacity: 0 }}
              animate={{ scale: 1, opacity: 1 }}
              transition={{ duration: 0.8 }}
            /> */}
            <motion.p
              className="text-2xl text-pink-700 font-semibold max-w-md"
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ delay: 0.5, duration: 0.8 }}
            >
              Dev ‡∏ó‡∏µ‡πà‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÅ‡∏≠‡∏õ‡∏ô‡∏µ‡πâ‡∏£‡πâ‡∏≠‡∏á‡πÑ‡∏´‡πâ‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß 10.254851 ‡∏£‡∏≠‡∏ö
              <br />
              ‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏°‡∏±‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤
              <br />
              ‡∏≠‡∏¢‡∏≤‡∏Å‡πÉ‡∏´‡πâ‡∏£‡∏π‡πâ‡∏ß‡πà‡∏≤ ‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏≥‡∏à‡∏≤‡∏Å‡πÉ‡∏à ‡∏ï‡∏±‡πâ‡∏á‡πÉ‡∏à‡∏ó‡∏≥‡∏ó‡∏∏‡∏Å‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏•‡∏¢
              <br />
              ‡∏´‡∏ß‡∏±‡∏á‡∏ß‡πà‡∏≤‡πÄ‡∏ß‡∏•‡∏≤‡∏°‡∏≠‡∏á‡∏™‡∏¥‡πà‡∏á‡∏ô‡∏µ‡πâ ‡∏à‡∏∞‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏ó‡∏≠‡∏¢‡∏¥‡πâ‡∏°‡πÑ‡∏î‡πâ.. ‚ù§Ô∏è
              <br />
              ‡∏õ‡∏•. ‡∏°‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÅ‡∏£‡∏Å ‡πÅ‡∏ï‡πà‡∏°‡∏±‡∏ô‡∏à‡∏∞‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô‡∏ó‡∏∏‡∏Å‡πÜ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏ñ‡∏∂‡∏á‡∏ß‡∏±‡∏ô‡∏Ñ‡∏£‡∏ö‡∏£‡∏≠‡∏ö‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤..
            </motion.p>
            <button
              onClick={handleBack}
              className="flex items-center gap-5 mt-6 px-4 py-2  rounded-lg border-2 border-pink-400 shadow-[2px_2px_0px_#000] hover:shadow-[4px_4px_0px_#000] transition-all duration-200 font-bold"
              style={{
                backgroundColor: "#FFCAC9",
                color: "#9F5857",
                borderWidth: "2px",
                borderStyle: "solid",
                borderColor: "#9F5857",
              }}
            >
              <Icon icon="mdi:arrow-left" width="20" />
              <span>‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö</span>
            </button>
          </motion.div>
        )}
        {scene === "lastThanks" && (
          <motion.div
            key="lastThanks"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            className="flex flex-col items-center justify-center min-h-screen px-8 text-center"
          >
            <p className="text-2xl font-bold text-pink-600">
              ‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß... ‡πÄ‡∏Ñ‡πâ‡∏≤‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡∏ó‡∏µ‡πà‡πÅ‡∏ó‡πâ‡∏à‡∏£‡∏¥‡∏á‡∏Ñ‡∏∑‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à üíñ
            </p>
            <p className="mt-4 text-lg text-gray-700">
              ‡πÄ‡∏£‡∏≤‡∏≠‡∏≤‡∏à‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏±‡∏ô‡∏ï‡∏•‡∏≠‡∏î‡πÄ‡∏ß‡∏•‡∏≤ ‡πÅ‡∏ï‡πà‡∏ñ‡πâ‡∏≤‡πÄ‡∏£‡∏≤‡∏¢‡∏±‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏Å‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏±‡∏ô
              ‡πÄ‡∏Ñ‡πâ‡∏≤‡∏Ñ‡∏¥‡∏î‡∏ß‡πà‡∏≤‡∏°‡∏±‡∏ô‡∏Ñ‡∏∑‡∏≠‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î
              ‡πÅ‡∏•‡∏∞‡∏≠‡∏¢‡∏≤‡∏Å‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡∏¢‡∏±‡∏á‡πÄ‡∏î‡∏¥‡∏ô‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏±‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ‡πÄ‡∏™‡∏°‡∏≠..
              ‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏Å‡∏±‡∏ô‡πÑ‡∏õ‡∏ö‡πâ‡∏≤‡∏á ‡∏´‡∏£‡∏∑‡∏≠‡∏ó‡∏≥‡∏ï‡∏±‡∏ß‡πÑ‡∏°‡πà‡∏î‡∏µ‡πÑ‡∏õ‡∏ö‡πâ‡∏≤‡∏á(‡∏°‡∏≤‡∏Å)
              ‡πÅ‡∏ï‡πà‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏Ñ‡πâ‡∏≤‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡∏à‡∏£‡∏¥‡∏á ‡πÜ
              ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏Ñ‡∏π‡πà‡∏°‡∏µ‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô ‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÑ‡∏´‡∏ô‡∏Å‡πá‡∏ï‡∏≤‡∏°
            </p>

            <button
              onClick={() => setScene("intro")}
              className="flex items-center gap-5 mt-6 px-4 py-2 rounded"
              style={{
                backgroundColor: "#FFCAC9",
                color: "#9F5857",
                borderWidth: "2px",
                borderStyle: "solid",
                borderColor: "#9F5857",
              }}
            >
              <Icon icon="mdi:restart" width="20" />
              <span>‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á</span>
            </button>
          </motion.div>
        )}
      </AnimatePresence>{" "}
      {isPlaying && (
        <div
          className="
    fixed bottom-30 left-1/2 transform -translate-x-1/2
    border-2 border-pink-900 backdrop-blur-md
    text-pink-900 rounded-full shadow-lg
    px-5 py-2 flex items-center gap-3 z-50
  "
        >
          <button
            onClick={() => {
              if (!audioRef.current) return;
              audioRef.current.currentTime = 0;
              audioRef.current.play();
            }}
            className="
      w-10 h-10 rounded-full bg-white shadow-md
      hover:bg-pink-100 flex items-center justify-center
      transition-colors duration-200
    "
          >
            <Icon icon="mdi:skip-previous" width="24" />
          </button>

          <button
            onClick={() => {
              if (!audioRef.current) return;
              isPlaying ? audioRef.current.pause() : audioRef.current.play();
            }}
            className="
      w-12 h-12 rounded-full bg-white shadow-md
      hover:bg-pink-100 flex items-center justify-center
      transition-colors duration-200
    "
          >
            <Icon icon={isPlaying ? "mdi:pause" : "mdi:play"} width="28" />
          </button>

          <button
            onClick={() =>
              audioRef.current && (audioRef.current.currentTime += 10)
            }
            className="
      w-10 h-10 rounded-full bg-white shadow-md
      hover:bg-pink-100 flex items-center justify-center
      transition-colors duration-200
    "
          >
            <Icon icon="mdi:skip-next" width="24" />
          </button>

          <span className="ml-3 text-sm font-medium select-none">
            Playing : Love Story
          </span>
        </div>
      )}
    </motion.div>
  );
}
